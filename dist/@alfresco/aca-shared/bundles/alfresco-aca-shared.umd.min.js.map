{"version":3,"sources":["node_modules/tslib/tslib.es6.js","ng://@alfresco/aca-shared/lib/adf-extensions/extensions-data-loader.guard.ts","ng://@alfresco/aca-shared/lib/components/page-layout/page-layout-content.component.ts","ng://@alfresco/aca-shared/lib/components/page-layout/page-layout-error.component.ts","ng://@alfresco/aca-shared/lib/components/page-layout/page-layout-header.component.ts","ng://@alfresco/aca-shared/lib/components/page-layout/page-layout.component.ts","ng://@alfresco/aca-shared/lib/components/page-layout/page-layout.module.ts","ng://@alfresco/aca-shared/lib/components/locked-by/locked-by.component.ts","ng://@alfresco/aca-shared/lib/components/locked-by/locked-by.module.ts","ng://@alfresco/aca-shared/lib/routing/app.routes.strategy.ts","ng://@alfresco/aca-shared/lib/routing/shared.guard.ts","ng://@alfresco/aca-shared/lib/services/app.service.ts","ng://@alfresco/aca-shared/lib/services/content-api.service.ts","ng://@alfresco/aca-shared/lib/services/node-permission.service.ts","ng://@alfresco/aca-shared/lib/components/generic-error/generic-error.component.ts","ng://@alfresco/aca-shared/lib/components/generic-error/generic-error.module.ts","ng://@alfresco/aca-shared/lib/directives/contextmenu/contextmenu.directive.ts","ng://@alfresco/aca-shared/lib/directives/contextmenu/contextmenu.module.ts","ng://@alfresco/aca-shared/lib/shared.module.ts","ng://@alfresco/aca-shared/lib/utils/node.utils.ts"],"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","this","__read","o","m","Symbol","iterator","r","e","ar","next","done","push","value","error","__spread","concat","DefaultExtensionLoaderFactory","EXTENSION_DATA_LOADERS","InjectionToken","providedIn","factory","ExtensionsDataLoaderGuard","extensionDataLoaders","canActivate","route","of","dataLoaderCallbacks","map","callback","forkJoin","pipe","catchError","console","Injectable","args","Inject","PageLayoutContentComponent","scrollable","Component","selector","template","encapsulation","ViewEncapsulation","None","changeDetection","ChangeDetectionStrategy","OnPush","host","class","Input","type","HostBinding","PageLayoutErrorComponent","PageLayoutHeaderComponent","PageLayoutComponent","hasError","PageLayoutModule","NgModule","imports","CommonModule","declarations","exports","LockedByComponent","ngOnInit","node","context","row","writeLockedBy","entry","properties","displayName","LockedByModule","MatIconModule","AppRouteReuseStrategy","routeCache","Map","resetCache","_this","forEach","deactivateComponent","handle","clear","componentRef","destroy","shouldReuseRoute","future","curr","ret","routeConfig","addRedirectsRecursively","shouldDetach","data","getRouteData","reuse","store","url","getFullRouteUrl","set","shouldAttach","has","retrieve","get","config","loadChildren","routeFirstChild","firstChild","routeFirstChildUrl","getRouteUrlPaths","join","childConfigs","children","childConfigWithRedirect","find","c","path","redirectTo","childRoute","getFullRouteUrlPaths","filter","Boolean","paths","parent","urlSegment","AppSharedRuleGuard","isQuickShareEnabled$","select","isQuickShareEnabled","_","canActivateChild","Store","AppService","auth","routeStrategy","ready","BehaviorSubject","isLoggedIn","withCredentials","ready$","asObservable","onLogin","subscribe","onLogout","defineProperty","AuthenticationService","AppConfigService","decorators","RouteReuseStrategy","ContentApiService","api","preferences","deleteNode","nodeId","options","from","nodesApi","getNode","queryOptions","include","getNodeInfo","getNodeChildren","defaults","maxItems","paginationSize","skipCount","deleteSharedLink","linkId","sharedLinksApi","getDeletedNodes","restoreNode","purgeDeletedNode","getPerson","personId","peopleApi","copyNode","targetParentId","name","opts","getRepositoryInformation","getInstance","discovery","discoveryApi","getFavorites","favoritesApi","getFavoriteLibraries","where","response","list","entries","_a","target","site","createdAt","pagination","findSharedLinks","getSharedLinkContent","sharedId","attachment","contentApi","getSharedLinkContentUrl","search","request","searchApi","getContentUrl","deleteSite","siteId","sitesApi","leaveSite","removeSiteMember","createSite","siteBody","getSite","updateLibrary","updateSite","addFavorite","nodes","payload","_b","isFolder","id","guid","removeFavorite","Promise","all","removeFavoriteSite","unlockNode","AlfrescoApiService","UserPreferencesService","NodePermissionService","defaultOptions","operation","DEFAULT_OPERATION","check","source","permissions","Array","isArray","item","every","isOperationAllowed","allowableOperations","getAllowableOperations","some","permission","includes","property","allowableOperationsOnTarget","GenericErrorComponent","text","GenericErrorModule","TranslateModule","forChild","ContextActionsDirective","execute$","Subject","onDestroy$","enabled","onContextMenuEvent","event","preventDefault","getTarget","execute","debounceTime","takeUntil","dispatch","ContextMenu","ngOnDestroy","complete","isSelected","dispatchEvent","MouseEvent","findAncestor","classList","contains","el","className","parentElement","Directive","exportAs","HostListener","ContextActionsModule","SharedModule","forRoot","ngModule","providers","isLocked","isLibrary","preset","title","visibility","nodeType"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","/*!\n * @license\n * Alfresco Example Content Application\n *\n * Copyright (C) 2005 - 2020 Alfresco Software Limited\n *\n * This file is part of the Alfresco Example Content Application.\n * If the software was purchased under a paid Alfresco license, the terms of\n * the paid license agreement will prevail.  Otherwise, the software is\n * provided under the following open source license terms:\n *\n * The Alfresco Example Content Application is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * The Alfresco Example Content Application is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with Alfresco. If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport { Injectable, InjectionToken, Inject } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot } from '@angular/router';\nimport { Observable, forkJoin, of } from 'rxjs';\nimport { map, catchError } from 'rxjs/operators';\n\nexport type ExtensionLoaderCallback = (\n  route: ActivatedRouteSnapshot\n) => Observable<true>;\n\nexport function DefaultExtensionLoaderFactory() {\n  return [];\n}\n\nexport const EXTENSION_DATA_LOADERS = new InjectionToken<\n  ExtensionLoaderCallback[]\n>('EXTENSION_DATA_LOADERS', {\n  providedIn: 'root',\n  factory: DefaultExtensionLoaderFactory\n});\n\n@Injectable({ providedIn: 'root' })\nexport class ExtensionsDataLoaderGuard implements CanActivate {\n  constructor(\n    @Inject(EXTENSION_DATA_LOADERS)\n    private extensionDataLoaders: ExtensionLoaderCallback[]\n  ) {}\n\n  canActivate(route: ActivatedRouteSnapshot): Observable<boolean> {\n    if (!this.extensionDataLoaders.length) {\n      return of(true);\n    }\n\n    const dataLoaderCallbacks = this.extensionDataLoaders.map(callback =>\n      callback(route)\n    );\n\n    // Undocumented forkJoin behaviour/bug:\n    // https://github.com/ReactiveX/rxjs/issues/3246\n    // So all callbacks need to emit before completion, otherwise forkJoin will short circuit\n    return forkJoin(...dataLoaderCallbacks).pipe(\n      map(() => true),\n      catchError(e => {\n        // tslint:disable-next-line\n        console.error(\n          'Some of the extension data loader guards has been errored.'\n        );\n        // tslint:disable-next-line\n        console.error(e);\n        return of(true);\n      })\n    );\n  }\n}\n","/*!\n * @license\n * Alfresco Example Content Application\n *\n * Copyright (C) 2005 - 2020 Alfresco Software Limited\n *\n * This file is part of the Alfresco Example Content Application.\n * If the software was purchased under a paid Alfresco license, the terms of\n * the paid license agreement will prevail.  Otherwise, the software is\n * provided under the following open source license terms:\n *\n * The Alfresco Example Content Application is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * The Alfresco Example Content Application is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with Alfresco. If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport {\n  Component,\n  ViewEncapsulation,\n  ChangeDetectionStrategy,\n  Input,\n  HostBinding\n} from '@angular/core';\n\n@Component({\n  selector: 'aca-page-layout-content',\n  template: `\n    <ng-content></ng-content>\n  `,\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  host: { class: 'aca-page-layout-content' }\n})\nexport class PageLayoutContentComponent {\n  @Input()\n  @HostBinding('class.scrollable')\n  scrollable = false;\n}\n","/*!\n * @license\n * Alfresco Example Content Application\n *\n * Copyright (C) 2005 - 2020 Alfresco Software Limited\n *\n * This file is part of the Alfresco Example Content Application.\n * If the software was purchased under a paid Alfresco license, the terms of\n * the paid license agreement will prevail.  Otherwise, the software is\n * provided under the following open source license terms:\n *\n * The Alfresco Example Content Application is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * The Alfresco Example Content Application is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with Alfresco. If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport {\n  Component,\n  ViewEncapsulation,\n  ChangeDetectionStrategy\n} from '@angular/core';\n\n@Component({\n  selector: 'aca-page-layout-error',\n  template: `\n    <ng-content></ng-content>\n  `,\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  host: { class: 'aca-page-layout-error' }\n})\nexport class PageLayoutErrorComponent {}\n","/*!\n * @license\n * Alfresco Example Content Application\n *\n * Copyright (C) 2005 - 2020 Alfresco Software Limited\n *\n * This file is part of the Alfresco Example Content Application.\n * If the software was purchased under a paid Alfresco license, the terms of\n * the paid license agreement will prevail.  Otherwise, the software is\n * provided under the following open source license terms:\n *\n * The Alfresco Example Content Application is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * The Alfresco Example Content Application is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with Alfresco. If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport {\n  Component,\n  ViewEncapsulation,\n  ChangeDetectionStrategy\n} from '@angular/core';\n\n@Component({\n  selector: 'aca-page-layout-header',\n  template: '<ng-content></ng-content>',\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  host: { class: 'aca-page-layout-header' }\n})\nexport class PageLayoutHeaderComponent {}\n","/*!\n * @license\n * Alfresco Example Content Application\n *\n * Copyright (C) 2005 - 2020 Alfresco Software Limited\n *\n * This file is part of the Alfresco Example Content Application.\n * If the software was purchased under a paid Alfresco license, the terms of\n * the paid license agreement will prevail.  Otherwise, the software is\n * provided under the following open source license terms:\n *\n * The Alfresco Example Content Application is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * The Alfresco Example Content Application is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with Alfresco. If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport {\n  Component,\n  ViewEncapsulation,\n  ChangeDetectionStrategy,\n  Input\n} from '@angular/core';\n\n@Component({\n  selector: 'aca-page-layout',\n  templateUrl: 'page-layout.component.html',\n  styleUrls: ['./page-layout.component.scss'],\n  encapsulation: ViewEncapsulation.None,\n  host: { class: 'aca-page-layout' },\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class PageLayoutComponent {\n  @Input()\n  hasError = false;\n}\n","/*!\n * @license\n * Alfresco Example Content Application\n *\n * Copyright (C) 2005 - 2020 Alfresco Software Limited\n *\n * This file is part of the Alfresco Example Content Application.\n * If the software was purchased under a paid Alfresco license, the terms of\n * the paid license agreement will prevail.  Otherwise, the software is\n * provided under the following open source license terms:\n *\n * The Alfresco Example Content Application is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * The Alfresco Example Content Application is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with Alfresco. If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport { NgModule } from '@angular/core';\nimport { PageLayoutContentComponent } from './page-layout-content.component';\nimport { PageLayoutErrorComponent } from './page-layout-error.component';\nimport { PageLayoutHeaderComponent } from './page-layout-header.component';\nimport { PageLayoutComponent } from './page-layout.component';\nimport { CommonModule } from '@angular/common';\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [\n    PageLayoutContentComponent,\n    PageLayoutErrorComponent,\n    PageLayoutHeaderComponent,\n    PageLayoutComponent\n  ],\n  exports: [\n    PageLayoutContentComponent,\n    PageLayoutErrorComponent,\n    PageLayoutHeaderComponent,\n    PageLayoutComponent\n  ]\n})\nexport class PageLayoutModule {}\n","/*!\n * @license\n * Alfresco Example Content Application\n *\n * Copyright (C) 2005 - 2020 Alfresco Software Limited\n *\n * This file is part of the Alfresco Example Content Application.\n * If the software was purchased under a paid Alfresco license, the terms of\n * the paid license agreement will prevail.  Otherwise, the software is\n * provided under the following open source license terms:\n *\n * The Alfresco Example Content Application is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * The Alfresco Example Content Application is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with Alfresco. If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport {\n  Component,\n  Input,\n  OnInit,\n  ChangeDetectionStrategy,\n  ViewEncapsulation\n} from '@angular/core';\n\nimport { NodeEntry } from '@alfresco/js-api';\n\n@Component({\n  selector: 'aca-locked-by',\n  template: `\n    <mat-icon class=\"locked_by--icon\">lock</mat-icon>\n    <span class=\"locked_by--name\">{{ writeLockedBy() }}</span>\n  `,\n  styleUrls: ['./locked-by.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  host: {\n    class: 'aca-locked-by'\n  }\n})\nexport class LockedByComponent implements OnInit {\n  @Input()\n  context: any;\n\n  node: NodeEntry;\n\n  constructor() {}\n\n  ngOnInit() {\n    this.node = this.context.row.node;\n  }\n\n  writeLockedBy() {\n    return (\n      this.node &&\n      this.node.entry.properties &&\n      this.node.entry.properties['cm:lockOwner'] &&\n      this.node.entry.properties['cm:lockOwner'].displayName\n    );\n  }\n}\n","/*!\n * @license\n * Alfresco Example Content Application\n *\n * Copyright (C) 2005 - 2020 Alfresco Software Limited\n *\n * This file is part of the Alfresco Example Content Application.\n * If the software was purchased under a paid Alfresco license, the terms of\n * the paid license agreement will prevail.  Otherwise, the software is\n * provided under the following open source license terms:\n *\n * The Alfresco Example Content Application is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * The Alfresco Example Content Application is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with Alfresco. If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport { NgModule } from '@angular/core';\nimport { LockedByComponent } from './locked-by.component';\nimport { MatIconModule } from '@angular/material/icon';\nimport { CommonModule } from '@angular/common';\n\n@NgModule({\n  imports: [CommonModule, MatIconModule],\n  declarations: [LockedByComponent],\n  exports: [LockedByComponent]\n})\nexport class LockedByModule {}\n","/*!\n * @license\n * Alfresco Example Content Application\n *\n * Copyright (C) 2005 - 2020 Alfresco Software Limited\n *\n * This file is part of the Alfresco Example Content Application.\n * If the software was purchased under a paid Alfresco license, the terms of\n * the paid license agreement will prevail.  Otherwise, the software is\n * provided under the following open source license terms:\n *\n * The Alfresco Example Content Application is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * The Alfresco Example Content Application is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with Alfresco. If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport {\n  RouteReuseStrategy,\n  DetachedRouteHandle,\n  ActivatedRouteSnapshot\n} from '@angular/router';\nimport { ComponentRef } from '@angular/core';\n\ninterface RouteData {\n  reuse: boolean;\n}\n\ninterface RouteInfo {\n  handle: DetachedRouteHandle;\n  data: RouteData;\n}\n\nexport class AppRouteReuseStrategy implements RouteReuseStrategy {\n  private routeCache = new Map<string, RouteInfo>();\n\n  resetCache() {\n    this.routeCache.forEach(value => {\n      this.deactivateComponent(value.handle);\n    });\n    this.routeCache.clear();\n  }\n\n  private deactivateComponent(handle: DetachedRouteHandle): void {\n    if (!handle) {\n      return;\n    }\n    const componentRef: ComponentRef<any> = handle['componentRef'];\n    if (componentRef) {\n      componentRef.destroy();\n    }\n  }\n\n  shouldReuseRoute(\n    future: ActivatedRouteSnapshot,\n    curr: ActivatedRouteSnapshot\n  ): boolean {\n    const ret = future.routeConfig === curr.routeConfig;\n    if (ret) {\n      this.addRedirectsRecursively(future); // update redirects\n    }\n    return ret;\n  }\n\n  shouldDetach(route: ActivatedRouteSnapshot): boolean {\n    const data = this.getRouteData(route);\n    return data && data.reuse;\n  }\n\n  store(route: ActivatedRouteSnapshot, handle: DetachedRouteHandle): void {\n    const url = this.getFullRouteUrl(route);\n    const data = this.getRouteData(route);\n    this.routeCache.set(url, { handle, data });\n    this.addRedirectsRecursively(route);\n  }\n\n  shouldAttach(route: ActivatedRouteSnapshot): boolean {\n    const url = this.getFullRouteUrl(route);\n    return this.routeCache.has(url);\n  }\n\n  retrieve(route: ActivatedRouteSnapshot): DetachedRouteHandle {\n    const url = this.getFullRouteUrl(route);\n    const data = this.getRouteData(route);\n    return data && data.reuse && this.routeCache.has(url)\n      ? this.routeCache.get(url).handle\n      : null;\n  }\n\n  private addRedirectsRecursively(route: ActivatedRouteSnapshot): void {\n    const config = route.routeConfig;\n    if (config) {\n      if (!config.loadChildren) {\n        const routeFirstChild = route.firstChild;\n        const routeFirstChildUrl = routeFirstChild\n          ? this.getRouteUrlPaths(routeFirstChild).join('/')\n          : '';\n        const childConfigs = config.children;\n        if (childConfigs) {\n          const childConfigWithRedirect = childConfigs.find(\n            c => c.path === '' && !!c.redirectTo\n          );\n          if (childConfigWithRedirect) {\n            childConfigWithRedirect.redirectTo = routeFirstChildUrl;\n          }\n        }\n      }\n      route.children.forEach(childRoute =>\n        this.addRedirectsRecursively(childRoute)\n      );\n    }\n  }\n\n  private getFullRouteUrl(route: ActivatedRouteSnapshot): string {\n    return this.getFullRouteUrlPaths(route)\n      .filter(Boolean)\n      .join('/');\n  }\n\n  private getFullRouteUrlPaths(route: ActivatedRouteSnapshot): string[] {\n    const paths = this.getRouteUrlPaths(route);\n    return route.parent\n      ? [...this.getFullRouteUrlPaths(route.parent), ...paths]\n      : paths;\n  }\n\n  private getRouteUrlPaths(route: ActivatedRouteSnapshot): string[] {\n    return route.url.map(urlSegment => urlSegment.path);\n  }\n\n  private getRouteData(route: ActivatedRouteSnapshot): RouteData {\n    return route.routeConfig && (route.routeConfig.data as RouteData);\n  }\n}\n","/*!\n * @license\n * Alfresco Example Content Application\n *\n * Copyright (C) 2005 - 2020 Alfresco Software Limited\n *\n * This file is part of the Alfresco Example Content Application.\n * If the software was purchased under a paid Alfresco license, the terms of\n * the paid license agreement will prevail.  Otherwise, the software is\n * provided under the following open source license terms:\n *\n * The Alfresco Example Content Application is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * The Alfresco Example Content Application is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with Alfresco. If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { Store } from '@ngrx/store';\nimport { AppStore, isQuickShareEnabled } from '@alfresco/aca-shared/store';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AppSharedRuleGuard implements CanActivate {\n  isQuickShareEnabled$: Observable<boolean>;\n\n  constructor(store: Store<AppStore>) {\n    this.isQuickShareEnabled$ = store.select(isQuickShareEnabled);\n  }\n\n  canActivate(\n    _: ActivatedRouteSnapshot\n  ): Observable<boolean> | Promise<boolean> | boolean {\n    return this.isQuickShareEnabled$;\n  }\n\n  canActivateChild(\n    route: ActivatedRouteSnapshot\n  ): Observable<boolean> | Promise<boolean> | boolean {\n    return this.canActivate(route);\n  }\n}\n","/*!\n * @license\n * Alfresco Example Content Application\n *\n * Copyright (C) 2005 - 2020 Alfresco Software Limited\n *\n * This file is part of the Alfresco Example Content Application.\n * If the software was purchased under a paid Alfresco license, the terms of\n * the paid license agreement will prevail.  Otherwise, the software is\n * provided under the following open source license terms:\n *\n * The Alfresco Example Content Application is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * The Alfresco Example Content Application is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with Alfresco. If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport { Injectable, Inject } from '@angular/core';\nimport { AuthenticationService, AppConfigService } from '@alfresco/adf-core';\nimport { Observable, BehaviorSubject } from 'rxjs';\nimport { RouteReuseStrategy } from '@angular/router';\nimport { AppRouteReuseStrategy } from '../routing/app.routes.strategy';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AppService {\n  private ready: BehaviorSubject<boolean>;\n  ready$: Observable<boolean>;\n\n  /**\n   * Whether `withCredentials` mode is enabled.\n   * Usually means that `Kerberos` mode is used.\n   */\n  get withCredentials(): boolean {\n    return this.config.get<boolean>('auth.withCredentials', false);\n  }\n\n  constructor(\n    auth: AuthenticationService,\n    private config: AppConfigService,\n    @Inject(RouteReuseStrategy) routeStrategy: AppRouteReuseStrategy\n  ) {\n    this.ready = new BehaviorSubject(auth.isLoggedIn() || this.withCredentials);\n    this.ready$ = this.ready.asObservable();\n\n    auth.onLogin.subscribe(() => {\n      routeStrategy.resetCache();\n      this.ready.next(true);\n    });\n\n    auth.onLogout.subscribe(() => {\n      routeStrategy.resetCache();\n    });\n  }\n}\n","/*!\n * @license\n * Alfresco Example Content Application\n *\n * Copyright (C) 2005 - 2020 Alfresco Software Limited\n *\n * This file is part of the Alfresco Example Content Application.\n * If the software was purchased under a paid Alfresco license, the terms of\n * the paid license agreement will prevail.  Otherwise, the software is\n * provided under the following open source license terms:\n *\n * The Alfresco Example Content Application is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * The Alfresco Example Content Application is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with Alfresco. If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport { Injectable } from '@angular/core';\nimport { AlfrescoApiService, UserPreferencesService } from '@alfresco/adf-core';\nimport { Observable, from } from 'rxjs';\nimport {\n  MinimalNodeEntity,\n  NodePaging,\n  Node,\n  DeletedNodesPaging,\n  PersonEntry,\n  NodeEntry,\n  DiscoveryEntry,\n  FavoritePaging,\n  SharedLinkPaging,\n  SearchRequest,\n  ResultSetPaging,\n  SiteBody,\n  SiteEntry,\n  FavoriteBody,\n  FavoriteEntry\n} from '@alfresco/js-api';\nimport { map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ContentApiService {\n  constructor(\n    private api: AlfrescoApiService,\n    private preferences: UserPreferencesService\n  ) {}\n\n  /**\n   * Moves a node to the trashcan.\n   * @param nodeId ID of the target node\n   * @param options Optional parameters supported by JS-API\n   * @returns Empty result that notifies when the deletion is complete\n   */\n  deleteNode(\n    nodeId: string,\n    options: { permanent?: boolean } = {}\n  ): Observable<void> {\n    return from(this.api.nodesApi.deleteNode(nodeId, options));\n  }\n\n  /**\n   * Gets the stored information about a node.\n   * @param nodeId ID of the target node\n   * @param options Optional parameters supported by JS-API\n   * @returns Node information\n   */\n  getNode(nodeId: string, options: any = {}): Observable<MinimalNodeEntity> {\n    const defaults = {\n      include: ['path', 'properties', 'allowableOperations', 'permissions']\n    };\n    const queryOptions = Object.assign(defaults, options);\n\n    return from(this.api.nodesApi.getNode(nodeId, queryOptions));\n  }\n\n  getNodeInfo(nodeId: string, options?: any): Observable<Node> {\n    const defaults = {\n      include: ['isFavorite', 'allowableOperations', 'path']\n    };\n    const queryOptions = Object.assign(defaults, options || {});\n\n    return from(this.api.nodesApi.getNodeInfo(nodeId, queryOptions));\n  }\n\n  /**\n   * Gets the items contained in a folder node.\n   * @param nodeId ID of the target node\n   * @param options Optional parameters supported by JS-API\n   * @returns List of child items from the folder\n   */\n  getNodeChildren(nodeId: string, options: any = {}): Observable<NodePaging> {\n    const defaults = {\n      maxItems: this.preferences.paginationSize,\n      skipCount: 0,\n      include: [\n        'isLocked',\n        'path',\n        'properties',\n        'allowableOperations',\n        'permissions'\n      ]\n    };\n    const queryOptions = Object.assign(defaults, options);\n\n    return from(this.api.nodesApi.getNodeChildren(nodeId, queryOptions));\n  }\n\n  deleteSharedLink(linkId: string): Observable<any> {\n    return from(this.api.sharedLinksApi.deleteSharedLink(linkId));\n  }\n\n  getDeletedNodes(options: any = {}): Observable<DeletedNodesPaging> {\n    const defaults = {\n      include: ['path']\n    };\n    const queryOptions = Object.assign(defaults, options);\n\n    return from(this.api.nodesApi.getDeletedNodes(queryOptions));\n  }\n\n  restoreNode(nodeId: string): Observable<MinimalNodeEntity> {\n    return from(this.api.nodesApi.restoreNode(nodeId));\n  }\n\n  purgeDeletedNode(nodeId: string): Observable<any> {\n    return from(this.api.nodesApi.purgeDeletedNode(nodeId));\n  }\n\n  /**\n   * Gets information about a user identified by their username.\n   * @param personId ID of the target user\n   * @returns User information\n   */\n  getPerson(\n    personId: string,\n    options?: { fields?: Array<string> }\n  ): Observable<PersonEntry> {\n    return from(this.api.peopleApi.getPerson(personId, options));\n  }\n\n  /**\n   * Copy a node to destination node\n   *\n   * @param nodeId The id of the node to be copied\n   * @param targetParentId The id of the folder-node where the node have to be copied to\n   * @param name The new name for the copy that would be added on the destination folder\n   */\n  copyNode(\n    nodeId: string,\n    targetParentId: string,\n    name?: string,\n    opts?: { include?: Array<string>; fields?: Array<string> }\n  ): Observable<NodeEntry> {\n    return from(\n      this.api.nodesApi.copyNode(nodeId, { targetParentId, name }, opts)\n    );\n  }\n\n  /**\n   * Gets product information for Content Services.\n   * @returns ProductVersionModel containing product details\n   */\n  getRepositoryInformation(): Observable<DiscoveryEntry> {\n    return from(\n      this.api.getInstance().discovery.discoveryApi.getRepositoryInformation()\n    );\n  }\n\n  getFavorites(\n    personId: string,\n    opts?: {\n      skipCount?: number;\n      maxItems?: number;\n      where?: string;\n      fields?: Array<string>;\n    }\n  ): Observable<FavoritePaging> {\n    return from(this.api.favoritesApi.getFavorites(personId, opts));\n  }\n\n  getFavoriteLibraries(\n    personId: string = '-me-',\n    opts?: any\n  ): Observable<FavoritePaging> {\n    return this.getFavorites(personId, {\n      ...opts,\n      where: '(EXISTS(target/site))'\n    }).pipe(\n      map((response: FavoritePaging) => {\n        return {\n          list: {\n            entries: response.list.entries.map(({ entry }: any) => {\n              entry.target.site.createdAt = entry.createdAt;\n              return {\n                entry: entry.target.site\n              };\n            }),\n            pagination: response.list.pagination\n          }\n        };\n      })\n    );\n  }\n\n  findSharedLinks(opts?: any): Observable<SharedLinkPaging> {\n    return from(this.api.sharedLinksApi.findSharedLinks(opts));\n  }\n\n  getSharedLinkContent(sharedId: string, attachment?: boolean): string {\n    return this.api.contentApi.getSharedLinkContentUrl(sharedId, attachment);\n  }\n\n  search(request: SearchRequest): Observable<ResultSetPaging> {\n    return from(this.api.searchApi.search(request));\n  }\n\n  getContentUrl(nodeId: string, attachment?: boolean): string {\n    return this.api.contentApi.getContentUrl(nodeId, attachment);\n  }\n\n  deleteSite(siteId?: string, opts?: { permanent?: boolean }): Observable<any> {\n    return from(this.api.sitesApi.deleteSite(siteId, opts));\n  }\n\n  leaveSite(siteId?: string): Observable<any> {\n    return from(this.api.sitesApi.removeSiteMember(siteId, '-me-'));\n  }\n\n  createSite(\n    siteBody: SiteBody,\n    opts?: {\n      fields?: Array<string>;\n      skipConfiguration?: boolean;\n      skipAddToFavorites?: boolean;\n    }\n  ): Observable<SiteEntry> {\n    return from(this.api.sitesApi.createSite(siteBody, opts));\n  }\n\n  getSite(\n    siteId?: string,\n    opts?: { relations?: Array<string>; fields?: Array<string> }\n  ): Observable<SiteEntry> {\n    return from(this.api.sitesApi.getSite(siteId, opts));\n  }\n\n  updateLibrary(siteId: string, siteBody: SiteBody): Observable<SiteEntry> {\n    return from(this.api.sitesApi.updateSite(siteId, siteBody));\n  }\n\n  addFavorite(nodes: Array<MinimalNodeEntity>): Observable<FavoriteEntry> {\n    const payload: FavoriteBody[] = nodes.map(node => {\n      const { isFolder, nodeId, id } = node.entry as any;\n      const siteId = node.entry['guid'];\n      const type = siteId ? 'site' : isFolder ? 'folder' : 'file';\n      const guid = siteId || nodeId || id;\n\n      return {\n        target: {\n          [type]: {\n            guid\n          }\n        }\n      };\n    });\n\n    return from(this.api.favoritesApi.addFavorite('-me-', payload as any));\n  }\n\n  removeFavorite(nodes: Array<MinimalNodeEntity>): Observable<any> {\n    return from(\n      Promise.all(\n        nodes.map((node: any) => {\n          const id = node.entry.nodeId || node.entry.id;\n          return this.api.favoritesApi.removeFavoriteSite('-me-', id);\n        })\n      )\n    );\n  }\n\n  unlockNode(nodeId: string, opts?: any) {\n    return this.api.nodesApi.unlockNode(nodeId, opts);\n  }\n}\n","/*!\n * @license\n * Alfresco Example Content Application\n *\n * Copyright (C) 2005 - 2020 Alfresco Software Limited\n *\n * This file is part of the Alfresco Example Content Application.\n * If the software was purchased under a paid Alfresco license, the terms of\n * the paid license agreement will prevail.  Otherwise, the software is\n * provided under the following open source license terms:\n *\n * The Alfresco Example Content Application is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * The Alfresco Example Content Application is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with Alfresco. If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport { Injectable } from '@angular/core';\nimport { NodePermissions } from '@alfresco/adf-extensions';\nimport { Node, SharedLink, SharedLinkEntry, NodeEntry } from '@alfresco/js-api';\n\nexport type PermissionSource = NodeEntry | SharedLinkEntry | Node;\n\nexport interface PermissionOptions {\n  target?: string;\n  operation?: string;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NodePermissionService implements NodePermissions {\n  static DEFAULT_OPERATION = 'OR';\n\n  private defaultOptions: PermissionOptions = {\n    operation: NodePermissionService.DEFAULT_OPERATION,\n    target: null\n  };\n\n  check(\n    source: PermissionSource | PermissionSource[],\n    permissions: string[],\n    options?: PermissionOptions\n  ): boolean {\n    const opts = Object.assign({}, this.defaultOptions, options || {});\n\n    if (!source) {\n      return false;\n    }\n\n    if (Array.isArray(source)) {\n      source = source.filter(item => item);\n\n      if (source.length > 0) {\n        return source.every(node =>\n          this.isOperationAllowed(node, permissions, opts)\n        );\n      }\n      return false;\n    } else {\n      return this.isOperationAllowed(source, permissions, opts);\n    }\n  }\n\n  private isOperationAllowed(\n    node: PermissionSource,\n    permissions: string[],\n    options: PermissionOptions\n  ): boolean {\n    const allowableOperations = this.getAllowableOperations(\n      node,\n      options.target\n    );\n\n    if (allowableOperations.length) {\n      if (options.operation === NodePermissionService.DEFAULT_OPERATION) {\n        return permissions.some(permission =>\n          allowableOperations.includes(permission)\n        );\n      } else {\n        return permissions.every(permission =>\n          allowableOperations.includes(permission)\n        );\n      }\n    }\n\n    return false;\n  }\n\n  private getAllowableOperations(\n    node: PermissionSource,\n    property?: string\n  ): string[] {\n    let entry: Node | SharedLink;\n\n    if ('entry' in node) {\n      entry = node.entry;\n    } else {\n      entry = node;\n    }\n\n    if (property) {\n      return entry[property] || [];\n    }\n\n    if ('allowableOperationsOnTarget' in entry) {\n      return entry.allowableOperationsOnTarget || [];\n    } else {\n      return entry.allowableOperations || [];\n    }\n  }\n}\n","/*!\n * @license\n * Alfresco Example Content Application\n *\n * Copyright (C) 2005 - 2020 Alfresco Software Limited\n *\n * This file is part of the Alfresco Example Content Application.\n * If the software was purchased under a paid Alfresco license, the terms of\n * the paid license agreement will prevail.  Otherwise, the software is\n * provided under the following open source license terms:\n *\n * The Alfresco Example Content Application is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * The Alfresco Example Content Application is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with Alfresco. If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport {\n  Component,\n  ViewEncapsulation,\n  ChangeDetectionStrategy,\n  Input\n} from '@angular/core';\n\n@Component({\n  selector: 'aca-generic-error',\n  templateUrl: './generic-error.component.html',\n  styleUrls: ['./generic-error.component.scss'],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  host: { class: 'aca-generic-error' }\n})\nexport class GenericErrorComponent {\n  @Input()\n  text = 'APP.MESSAGES.ERRORS.MISSING_CONTENT';\n}\n","/*!\n * @license\n * Alfresco Example Content Application\n *\n * Copyright (C) 2005 - 2020 Alfresco Software Limited\n *\n * This file is part of the Alfresco Example Content Application.\n * If the software was purchased under a paid Alfresco license, the terms of\n * the paid license agreement will prevail.  Otherwise, the software is\n * provided under the following open source license terms:\n *\n * The Alfresco Example Content Application is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * The Alfresco Example Content Application is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with Alfresco. If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport { NgModule } from '@angular/core';\nimport { GenericErrorComponent } from './generic-error.component';\nimport { MatIconModule } from '@angular/material/icon';\nimport { CommonModule } from '@angular/common';\nimport { TranslateModule } from '@ngx-translate/core';\n\n@NgModule({\n  imports: [CommonModule, MatIconModule, TranslateModule.forChild()],\n  declarations: [GenericErrorComponent],\n  exports: [GenericErrorComponent]\n})\nexport class GenericErrorModule {}\n","/*!\n * @license\n * Alfresco Example Content Application\n *\n * Copyright (C) 2005 - 2020 Alfresco Software Limited\n *\n * This file is part of the Alfresco Example Content Application.\n * If the software was purchased under a paid Alfresco license, the terms of\n * the paid license agreement will prevail.  Otherwise, the software is\n * provided under the following open source license terms:\n *\n * The Alfresco Example Content Application is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * The Alfresco Example Content Application is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with Alfresco. If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport {\n  Directive,\n  HostListener,\n  Input,\n  OnInit,\n  OnDestroy\n} from '@angular/core';\nimport { debounceTime, takeUntil } from 'rxjs/operators';\nimport { Subject } from 'rxjs';\nimport { Store } from '@ngrx/store';\nimport { AppStore, ContextMenu } from '@alfresco/aca-shared/store';\n\n@Directive({\n  selector: '[acaContextActions]',\n  exportAs: 'acaContextActions'\n})\nexport class ContextActionsDirective implements OnInit, OnDestroy {\n  private execute$: Subject<any> = new Subject();\n  onDestroy$: Subject<boolean> = new Subject<boolean>();\n\n  // tslint:disable-next-line:no-input-rename\n  @Input('acaContextEnable')\n  enabled = true;\n\n  @HostListener('contextmenu', ['$event'])\n  onContextMenuEvent(event: MouseEvent) {\n    if (event) {\n      event.preventDefault();\n\n      if (this.enabled) {\n        const target = this.getTarget(event);\n        if (target) {\n          this.execute(event, target);\n        }\n      }\n    }\n  }\n\n  constructor(private store: Store<AppStore>) {}\n\n  ngOnInit() {\n    this.execute$\n      .pipe(\n        debounceTime(300),\n        takeUntil(this.onDestroy$)\n      )\n      .subscribe((event: MouseEvent) => {\n        this.store.dispatch(new ContextMenu(event));\n      });\n  }\n\n  ngOnDestroy() {\n    this.onDestroy$.next(true);\n    this.onDestroy$.complete();\n  }\n\n  execute(event: MouseEvent, target: Element) {\n    if (!this.isSelected(target)) {\n      target.dispatchEvent(new MouseEvent('click'));\n    }\n\n    this.execute$.next(event);\n  }\n\n  private getTarget(event: MouseEvent): Element {\n    const target = event.target as Element;\n    return this.findAncestor(target, 'adf-datatable-cell');\n  }\n\n  private isSelected(target: Element): boolean {\n    if (!target) {\n      return false;\n    }\n\n    return this.findAncestor(target, 'adf-datatable-row').classList.contains(\n      'adf-is-selected'\n    );\n  }\n\n  private findAncestor(el: Element, className: string): Element {\n    if (el.classList.contains(className)) {\n      return el;\n    }\n    // tslint:disable-next-line:curly\n    while ((el = el.parentElement) && !el.classList.contains(className));\n    return el;\n  }\n}\n","/*!\n * @license\n * Alfresco Example Content Application\n *\n * Copyright (C) 2005 - 2020 Alfresco Software Limited\n *\n * This file is part of the Alfresco Example Content Application.\n * If the software was purchased under a paid Alfresco license, the terms of\n * the paid license agreement will prevail.  Otherwise, the software is\n * provided under the following open source license terms:\n *\n * The Alfresco Example Content Application is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * The Alfresco Example Content Application is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with Alfresco. If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport { NgModule } from '@angular/core';\nimport { ContextActionsDirective } from './contextmenu.directive';\n\n@NgModule({\n  declarations: [ContextActionsDirective],\n  exports: [ContextActionsDirective]\n})\nexport class ContextActionsModule {}\n","/*!\n * @license\n * Alfresco Example Content Application\n *\n * Copyright (C) 2005 - 2020 Alfresco Software Limited\n *\n * This file is part of the Alfresco Example Content Application.\n * If the software was purchased under a paid Alfresco license, the terms of\n * the paid license agreement will prevail.  Otherwise, the software is\n * provided under the following open source license terms:\n *\n * The Alfresco Example Content Application is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * The Alfresco Example Content Application is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with Alfresco. If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport { NgModule, ModuleWithProviders } from '@angular/core';\nimport { ContentApiService } from './services/content-api.service';\nimport { NodePermissionService } from './services/node-permission.service';\nimport { AppService } from './services/app.service';\nimport { ContextActionsModule } from './directives/contextmenu/contextmenu.module';\n@NgModule({\n  imports: [ContextActionsModule],\n  exports: [ContextActionsModule]\n})\nexport class SharedModule {\n  static forRoot(): ModuleWithProviders {\n    return {\n      ngModule: SharedModule,\n      providers: [ContentApiService, NodePermissionService, AppService]\n    };\n  }\n}\n","/*!\n * @license\n * Alfresco Example Content Application\n *\n * Copyright (C) 2005 - 2020 Alfresco Software Limited\n *\n * This file is part of the Alfresco Example Content Application.\n * If the software was purchased under a paid Alfresco license, the terms of\n * the paid license agreement will prevail.  Otherwise, the software is\n * provided under the following open source license terms:\n *\n * The Alfresco Example Content Application is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * The Alfresco Example Content Application is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with Alfresco. If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport { Node } from '@alfresco/js-api';\n\nexport function isLocked(node: { entry: Node }): boolean {\n  const { entry } = node;\n\n  return (\n    (entry && entry.isLocked) ||\n    (entry.properties &&\n      (entry.properties['cm:lockType'] === 'READ_ONLY_LOCK' ||\n        entry.properties['cm:lockType'] === 'WRITE_LOCK'))\n  );\n}\n\nexport function isLibrary(node: { entry: Node | any }): boolean {\n  const { entry } = node;\n\n  return (\n    (entry.guid &&\n      entry.id &&\n      entry.preset &&\n      entry.title &&\n      entry.visibility) ||\n    entry.nodeType === 'st:site'\n  );\n}\n"]}